# Copyright (C) 2019-2021 Alexandros Theodotou <alex at zrythm dot org>
#
# This file is part of Zrythm
#
# Zrythm is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Zrythm is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Zrythm.  If not, see <https://www.gnu.org/licenses/>.

option (
  'profiling',
  type: 'boolean',
  value: false,
  description: 'Enable profiling with gprof')

option (
  'tests',
  type: 'boolean',
  value: false,
  description: 'Whether to compile unit tests')

option (
  'gui_tests',
  type: 'boolean',
  value: false,
  description: 'Whether to compile GUI unit tests')

option (
  'portaudio',
  type: 'feature',
  value: 'disabled',
  description: 'Compile with portaudio support')

option (
  'rtmidi',
  type: 'feature',
  value: 'disabled',
  description: 'Compile with RtMidi support')

option (
  'rtaudio',
  type: 'feature',
  value: 'disabled',
  description: 'Compile with RtAudio support')

option (
  'sdl',
  type: 'feature',
  value: 'disabled',
  description: 'Compile with SDL2 backend support')

option (
  'carla',
  type: 'feature',
  value: 'enabled',
  description: 'Use Carla to wrap some plugins')

option (
  'jack',
  type: 'feature',
  value: 'auto',
  description: 'Compile with JACK support')

option (
  'graphviz',
  type: 'feature',
  value: 'auto',
  description: 'Compile with GraphViz support (for exporting graphs)')

option (
  'guile',
  type: 'feature',
  value: 'auto',
  description: 'Build with libguile support for scripting')

option (
  'lsp_dsp',
  type: 'feature',
  value: 'auto',
  description: 'Build with LSP DSP support for optimized DSP')

option (
  'static_lsp_dsp',
  type: 'boolean',
  value: false,
  description: 'Build with static LSP DSP lib')

option (
  'manpage',
  type: 'boolean',
  value: true,
  description: 'Build and install manpage')

option (
  'completions',
  type: 'boolean',
  value: true,
  description: 'Build and install shell completions')

option (
  'user_manual',
  type: 'boolean',
  value: false,
  description: 'Build and install user manual')

option (
  'strict_flags',
  type: 'boolean',
  value: false,
  description: 'Compile and link with strict flags (-Werror)')

option (
  'dseg_font',
  type: 'boolean',
  value: true,
  description: '''Install the DSEG14 font used by the
transport meters. Packagers should turn this off and
set the font as a dependency instead''')

option (
  'installer_ver',
  type: 'boolean',
  value: false,
  description: 'This is only used when making the installers')

option (
  'trial_ver',
  type: 'boolean',
  value: false,
  description: 'Whether this is a trial version with limited functionality')

option (
  'guile_snarf_docs_path',
  type: 'string',
  value: '',
  description: '''Path to guile-snarf-docs (used
when generating documentation for the scripting
interface). This is found in the libguile subdir of
the guile distribution after compiling it.''')

option (
  'fallback_version',
  type: 'string',
  value: '',
  description: 'Fallback version string to use if git is not available. meson.project_version () will be used if empty.')

option (
  'extra_optimizations',
  type: 'boolean',
  value: true,
  description: 'Turn on target machine-specific optimizations.')

option (
  'extra_extra_optimizations',
  type: 'boolean',
  value: false,
  description: 'Turn on more aggressive optimizations (experimental).')

option (
  'extra_debug_info',
  type: 'boolean',
  value: false,
  description: 'Enable extra debugging information (-g3).')

option (
  'program_name',
  type: 'string',
  value: 'Zrythm',
  description: 'Program name to display in the UI.')

option (
  'custom_logo_and_splash',
  type: 'boolean',
  value: false,
  description: 'Set this to true when replacing the logo and splash screen.')

option (
  'static_deps',
  type: 'boolean',
  value: false,
  description: 'Use static dependencies where possible.')

option (
  'carla_use_cv32_patchbay_variant',
  type: 'boolean',
  value: false,
  description: 'Use new CV32 variant that supports up to 64 audio ins/outs and 32 cv ins/outs (needs carla-git).')

option (
  'carla_binaries_dir',
  type: 'string',
  value: '',
  description: 'Location to collect carla discovery and bridge binaries.')

option (
  'carla_binaries_dir_32bit',
  type: 'string',
  value: '/mingw32/lib/carla',
  description: 'Location to collect carla discovery and bridge binaries (32-bit).')

option (
  'strict_sphinx_opts',
  type: 'boolean',
  value: true,
  description: 'Fail on warnings during sphinx-build.')

option (
  'opus',
  type: 'boolean',
  value: false,
  description: 'OGG OPUS support (requires libsndfile >= 1.0.29)')

option (
  'check_updates',
  type: 'boolean',
  value: true,
  description: 'Whether to check for updates on startup.')

option (
  'valgrind',
  type: 'feature',
  value: 'disabled',
  description: 'Compile with valgrind lib. Only useful for debugging.')

option (
  'appimage',
  type: 'boolean',
  value: false,
  description: 'Whether this is an AppImage build.')

option (
  'native_build',
  type: 'boolean',
  value: false,
  description: 'Whether this is a native build (will run on the same exact machine it is compiled on). This will turn on -march=native and -mtune=native')

option (
  'vamp_static',
  type: 'boolean',
  value: false,
  description: 'Whether to use static vamp libs (if available).')
