# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Alexandros Theodotou
# This file is distributed under the same license as the Zrythm package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Zrythm 0.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-31 18:23+0000\n"
"PO-Revision-Date: 2020-10-11 10:45+0000\n"
"Last-Translator: Tércio Martins <tecnotercio@yahoo.com.br>\n"
"Language: pt_BR\n"
"Language-Team: Portuguese (Brazil) "
"<https://hosted.weblate.org/projects/zrythm/manualplugins-files/pt_BR/>\n"
"Plural-Forms: nplurals=2; plural=n > 1\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../plugins-files/audio-midi-files/file-browser.rst:8
msgid "File Browser"
msgstr "Gerenciador de Arquivos"

#: ../../plugins-files/audio-midi-files/file-browser.rst:10
msgid ""
"The File Browser makes it easy to navigate through files on your computer"
" or through your custom collections."
msgstr ""

#: ../../plugins-files/audio-midi-files/file-browser.rst:14
msgid "This is a work in progress."
msgstr ""

#: ../../plugins-files/audio-midi-files/file-browser.rst:17
msgid "Filtering"
msgstr ""

#: ../../plugins-files/audio-midi-files/file-browser.rst:19
#: ../../plugins-files/audio-midi-files/file-browser.rst:24
msgid "TODO"
msgstr ""

#: ../../plugins-files/audio-midi-files/file-browser.rst:22
msgid "Collections"
msgstr ""

#: ../../plugins-files/audio-midi-files/file-browser.rst:27
msgid "Importing Files"
msgstr ""

#: ../../plugins-files/audio-midi-files/file-browser.rst:29
msgid ""
"Files are imported by either double clicking them in the browser or "
"dragging and dropping them into a track."
msgstr ""

#: ../../plugins-files/audio-midi-files/intro.rst:6
msgid "Audio & MIDI Files"
msgstr ""

#: ../../plugins-files/audio-midi-files/overview.rst:6
msgid "Overview"
msgstr ""

#: ../../plugins-files/audio-midi-files/overview.rst:8
msgid ""
"Zrythm can import MIDI and audio files into the project. The files can be"
" imported by dragging and dropping from your computer or from the :ref"
":`file-browser` into a track."
msgstr ""

#: ../../plugins-files/audio-midi-files/overview.rst:14
msgid "Supported Audio Formats"
msgstr ""

#: ../../plugins-files/audio-midi-files/overview.rst:15
msgid "Zrythm supports OGG, FLAC, WAV and MP3."
msgstr ""

#: ../../plugins-files/intro.rst:6
msgid "Plugins & Files"
msgstr ""

#: ../../plugins-files/plugins/inspector-page.rst:8
msgid "Inspector Page"
msgstr ""

#: ../../plugins-files/plugins/inspector-page.rst:10
msgid ""
"When a plugin is selected in the Mixer, or when using right click -> "
"Inspect on an instrument, its page will appear in the Inspector as "
"follows."
msgstr ""

#: ../../plugins-files/plugins/inspector-page.rst:17
msgid ""
"This page will display information about the plugin and its ports and "
"allow you to make changes."
msgstr ""

#: ../../plugins-files/plugins/inspector-page.rst:22
msgid "Display"
msgstr ""

#: ../../plugins-files/plugins/inspector-page.rst:23
msgid ""
"The number in the top right of each port name will display the current "
"number of connections to/from this port. See :doc:`../../routing/making-"
"connections` for details."
msgstr ""

#: ../../plugins-files/plugins/inspector-page.rst:29
msgid "Changing Values"
msgstr ""

#: ../../plugins-files/plugins/inspector-page.rst:30
msgid ""
"The values of control ports can be changed by clicking and dragging "
"inside each bar."
msgstr ""

#: ../../plugins-files/plugins/inspector-page.rst:33
msgid ":ref:`plugins-files/plugins/plugin-info:Plugin Ports`"
msgstr ""

#: ../../plugins-files/plugins/intro.rst:6
msgid "Plugins"
msgstr "Plugins"

#: ../../plugins-files/plugins/plugin-browser.rst:8
msgid "Plugin Browser"
msgstr "Gerenciador de Plugins"

#: ../../plugins-files/plugins/plugin-browser.rst:10
msgid ""
"The Plugin Browser makes it easy to browse and filter Plugins installed "
"on your computer."
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:17
msgid "Filters Tab"
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:18
msgid ""
"The filters tab at the top allows you to select how to filter the "
"Plugins. There are 3 tabs:"
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:23
msgid "Collection"
msgstr "Coleção"

#: ../../plugins-files/plugins/plugin-browser.rst:22
msgid ""
"This tab contains your collections. You can create collections such as "
"\"MySynths\" and filter by the selected collections."
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:26
msgid "Category"
msgstr "Categoria"

#: ../../plugins-files/plugins/plugin-browser.rst:26
msgid ""
"Filter plugins by category based on the plugin metadata, such as "
"\"Delay\", \"Distortion\", etc."
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:30
msgid "Protocol"
msgstr "Protocolo"

#: ../../plugins-files/plugins/plugin-browser.rst:29
msgid "Allows you to filter plugins based their protocol (eg., LV2 or SFZ)."
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:32
msgid "Filtering by collections and protocols is not operational at the moment."
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:36
msgid "Filter Buttons"
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:37
msgid "Additionally to the above, plugins can be filtered based on their type."
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:43
msgid "Filtering by modulator plugins"
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:45
msgid ""
"See :ref:`plugin-types` for more information about the various types of "
"plugins there are."
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:51
msgid "Instantiating Plugins"
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:52
msgid "There are a couple of ways to instantiate plugins:"
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:55
msgid "Drag-n-Drop"
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:57
msgid ""
"You can drag and drop the selected plugin into empty space in the "
"Tracklist or into empty space in the Mixer to create a new track using "
"that plugin."
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:67
msgid ""
"Alternatively, you can drag the plugin on a mixer slot to add it there or"
" replace the previous plugin."
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:73
msgid "If the plugin is a modulator, you can drop it into the Modulators tab."
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:80
msgid "Double Click/Enter"
msgstr ""

#: ../../plugins-files/plugins/plugin-browser.rst:82
msgid ""
"Double click on the plugin or select it and press the return key on your "
"keyboard to create a new track using that plugin."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:6
msgid "Plugin Overview"
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:8
msgid ""
"There are various types of :term:`plugins <Plugin>` supported by Zrythm, "
"mentioned in :ref:`scanning-plugins`."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:12
msgid "In Zrythm, :term:`SFZ`/:term:`SF2` are also used as plugins."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:18
msgid "Plugin Types"
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:20
msgid "Plugins are classified into the following categories."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:23
msgid "Instrument"
msgstr "Instrumento"

#: ../../plugins-files/plugins/plugin-info.rst:24
msgid "These plugins will create an instrument track when added to the project."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:28
msgid "Effects"
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:29
msgid ""
"These plugins can be dragged into the insert slots of existing channels "
"in the mixer or can be instantiated to create new FX tracks."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:34
msgid "Modulators"
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:35
msgid ""
"These plugins output :term:`CV` signals and can be used to modulate other"
" plugin or track parameters."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:39
msgid "MIDI Effects"
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:40
msgid ""
"These plugins modify incoming :term:`MIDI` signals and can be used in the"
" MIDI signal chain of an Instrument or MIDI track."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:46
msgid ""
"Zrythm looks inside the plugin's metadata to determine what type the "
"plugin is. If that is not enough, Zrythm makes a decision based on the "
"number of audio, MIDI, control and CV input and output ports a plugin "
"has."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:53
msgid "Plugin Ports"
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:54
msgid ""
"Plugins consist of controls (parameters) and a variety of audio, "
":term:`MIDI` and :term:`CV` ports. Ports are explained in :ref:`ports`."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:58
msgid ""
"Zrythm first creates all plugins with the following special control "
"ports. After these ports are created, Zrythm appends the rest of the "
"plugin's ports."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:64
msgid "Enabled"
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:65
msgid "Controls whether the plugin is active or bypassed."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:68
msgid "Gain"
msgstr "Ganho"

#: ../../plugins-files/plugins/plugin-info.rst:69
msgid "Increases the output volume of the plugin (if applicable)."
msgstr ""

#: ../../plugins-files/plugins/plugin-info.rst:73
msgid ""
"All of the plugin's ports will be shown in the :ref:`Inspector Page "
"<plugins-files/plugins/inspector-page:Inspector Page>`"
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:6
msgid "Plugin Window"
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:9
msgid "Custom UIs"
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:10
msgid ""
"When Plugin UIs are opened, a window such as the following will be "
"displayed, if the plugin ships with its own UI. This window will contain "
"additions by Zrythm (such as the `File` and `Presets` menus)."
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:19
msgid ""
"Some plugin UIs cannot be wrapped and will be opened in separate windows "
"without additions like `File` or `Presets`."
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:24
msgid "Generic UIs"
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:25
msgid ""
"If the plugin does not ship with its own UI, the following generic UI "
"will be generated for it."
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:32
msgid ""
"This only applies to :term:`LV2` plugins. For other types of plugins, you"
" can edit their parameters in the plugin inspector page (see :ref"
":`plugin-inspector-page`)."
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:38
msgid "Bridging"
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:39
msgid ""
"Most plugins are instantiated in the same process as Zrythm. This has the"
" advantage that :term:`DSP` is very fast, however, some plugin UIs are "
"not compatible with Zrythm and need to be bridged (ie, run as separate "
"processes)."
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:46
msgid ""
"When it is possible to bridge only the UI, Zrythm will do so, and this "
"will not have any performance implications on DSP. If bridging the whole "
"plugin is required, this will have some performance implications, since "
"it is required to communicate with the plugin in another process."
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:53
msgid "This process is transparent to the user and only mentioned for reference."
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:57
msgid "Opening Plugins in Bridged Mode"
msgstr ""

#: ../../plugins-files/plugins/plugin-window.rst:58
msgid ""
"Sometimes, you may need to manually tell Zrythm to open plugins in a "
"specific way. You can find the options available for each plugin by right"
" clicking on the plugin in the :ref:`plugin-browser`."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:8
msgid "Scanning for Plugins"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:10
msgid ""
"Zrythm will scan for plugins on startup and will remember those plugins "
"until it is closed. Zrythm supports :term:`LV2`, :term:`VST2`, "
":term:`VST3` and :term:`AU` plugins. LV2 is the recommended standard."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:17
msgid ""
":term:`SFZ` and :term:`SF2` instruments are also supported, and they are "
"scanned as instrument plugins."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:21
msgid ""
"Plugin scanning can be disabled by passing :envvar:`NO_SCAN_PLUGINS` when"
" running Zrythm."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:25
msgid "LV2 Scan"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:27
msgid ""
"Zrythm will scan for LV2 plugins in the `standard paths specified here "
"<https://lv2plug.in/pages/filesystem-hierarchy-standard.html>`_. You can "
"bypass this behavior by passing :envvar:`LV2_PATH`."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:33
msgid "VST2/VST3 Scan"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:36
msgid "GNU/Linux and FreeBSD"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:37
msgid "Zrythm will scan for VST2 plugins in the following paths,"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:40
msgid ":file:`{$HOME}/.vst`"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:41
msgid ":file:`{$HOME}/vst`"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:42
msgid ":file:`/usr/local/lib/vst`"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:43
msgid ":file:`/usr/lib/vst`"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:45
msgid "and VST3 plugins in the following paths."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:47
msgid ":file:`{$HOME}/.vst3`"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:48
msgid ":file:`/usr/local/lib/vst3`"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:49
msgid ":file:`/usr/lib/vst3`"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:51
msgid ""
"You can bypass this behavior by passing :envvar:`VST_PATH` and "
":envvar:`VST3_PATH`."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:54
msgid ""
"If your system uses a libdir other than ``lib`` (for example ``lib64``), "
"Zrythm will scan for plugins in both locations."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:59
msgid "Windows"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:60
msgid ""
"Zrythm will scan for VST plugins in the paths specified in :ref:`vst-"
"paths`."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:64
msgid "MacOS"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:65
msgid ""
"Zrythm will scan for VST plugins in the paths specified in `VST plug-in "
"locations on Mac OS X and macOS <https://helpcenter.steinberg.de/hc/en-"
"us/articles/115000171310>`_."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:68
msgid ":file:`/Library/Audio/Plug-Ins/VST` for VST2"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:69
msgid ":file:`/Library/Audio/Plug-Ins/VST3` for VST3"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:71
msgid ""
"Zrythm will remember scanned VST plugins and save this information in "
":file:`cached_plugin_descriptors.yaml` in the :term:`Zrythm user path`."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:77
msgid ""
"New plugins will be scanned on each start-up, and you can delete or edit "
"this file to force a re-scan of previously scanned plugins."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:82
msgid "AU Scan"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:83
msgid ""
"On MacOS, :term:`AU` plugins will be scanned at their standard location "
"at :file:`/Library/Audio/Plug-Ins/Components`."
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:88
msgid "SFZ/SF2 Scan"
msgstr ""

#: ../../plugins-files/plugins/scanning.rst:89
msgid ""
":term:`SFZ` and :term:`SF2` instruments will be scanned in all  "
"directories and subdirectories specified in :ref:`vst-paths`."
msgstr ""

#~ msgid ""
#~ "When a Plugin is selected in the"
#~ " Mixer, its page will appear in "
#~ "the Inspector, like the following."
#~ msgstr ""

#~ msgid ""
#~ "Zrythm allows you to drag-n-drop LV2 "
#~ "plugins and various files from the "
#~ "browsers on the right panel. This "
#~ "section will explain the various "
#~ "supported plugin and file types and "
#~ "their browsers."
#~ msgstr ""

#~ msgid "There are three types of Plugins in Zrythm."
#~ msgstr ""

#~ msgid "Instruments"
#~ msgstr ""

#~ msgid ""
#~ "Instruments are Plugins that are used"
#~ " to generate sound, such as synths"
#~ " or pianos."
#~ msgstr ""

#~ msgid ""
#~ "Effects are Plugins that change the "
#~ "audio signal passed to them. Examples"
#~ " are Reverb, Chorus and Flanger."
#~ msgstr ""

#~ msgid ""
#~ "Modulators are used to modulate the "
#~ "parameters of other Plugins. These "
#~ "include LFOs and envelopes."
#~ msgstr ""

#~ msgid "Supported Formats"
#~ msgstr ""

#~ msgid "Zrythm supports LV2 Plugins at the moment."
#~ msgstr ""

#~ msgid ""
#~ "This page will display information about"
#~ " the Plugin and allow you to "
#~ "route inputs and outputs to each "
#~ "port of the Plugin, for example to"
#~ " route an LFO output to a "
#~ "Filter Plugin's filter cutoff parameter."
#~ msgstr ""

#~ msgid ""
#~ "Allows you to filter plugins based "
#~ "their protocol (LV2 or VST). Not "
#~ "operational at the moment."
#~ msgstr ""

#~ msgid ""
#~ "Drag and drop the selected plugin "
#~ "into empty space in the Tracklist "
#~ "or into empty space in the Mixer"
#~ " to create a new track using "
#~ "that plugin. If the plugin is a"
#~ " modulator, you can drop it into "
#~ "the Modulators Tab."
#~ msgstr ""

#~ msgid ""
#~ "Channels also have their own Ports, "
#~ "for example for the Fader, Pan, "
#~ "and Enabled (On/Off)."
#~ msgstr ""

#~ msgid ""
#~ "On UNIX, Zrythm will scan for VST"
#~ " plugins in the following paths. -"
#~ " ``~/.vst`` - ``~/vst`` - "
#~ "``/usr/local/lib/vst`` - ``/usr/lib/vst``"
#~ msgstr ""

#~ msgid ""
#~ "On Windows, Zrythm will scan for "
#~ "plugins in the paths specified in "
#~ "`VST plug-in locations on Windows "
#~ "<https://helpcenter.steinberg.de/hc/en-us/articles/115000177084"
#~ "-VST-plug-in-locations-on-Windows>`_. "
#~ "- ``C:\\Program Files\\VSTPlugins`` - "
#~ "``C:\\Program Files\\Steinberg\\VSTPlugins`` - "
#~ "``C:\\Program Files\\Common Files\\VST2`` - "
#~ "``C:\\Program Files\\Common Files\\Steinberg\\VST2``"
#~ msgstr ""

#~ msgid ""
#~ "Zrythm will scan for plugins on "
#~ "startup and will remember those plugins"
#~ " until it is closed. Zrythm supports"
#~ " both LV2 and VST plugins, although"
#~ " LV2 is the recommended standard."
#~ msgstr ""

#~ msgid ""
#~ "Zrythm will scan for LV2 plugins "
#~ "in the standard paths specified `here"
#~ " <https://lv2plug.in/pages/filesystem-hierarchy-"
#~ "standard.html>`_. You can bypass this "
#~ "behavior by passing the ``LV2_PATH`` "
#~ "environment variable to specify custom "
#~ "paths. For example, ``LV2_PATH=~/custom-"
#~ "lv2-dir zrythm``."
#~ msgstr ""

#~ msgid "VST Scan"
#~ msgstr ""

#~ msgid "On UNIX, Zrythm will scan for VST plugins in the following paths."
#~ msgstr ""

#~ msgid "``~/.vst``"
#~ msgstr ""

#~ msgid "``~/vst``"
#~ msgstr ""

#~ msgid ""
#~ "On Windows, Zrythm will scan for "
#~ "plugins in the paths specified in "
#~ "`VST plug-in locations on Windows "
#~ "<https://helpcenter.steinberg.de/hc/en-us/articles/115000177084"
#~ "-VST-plug-in-locations-on-Windows>`_."
#~ msgstr ""

#~ msgid "``C:\\Program Files\\VSTPlugins``"
#~ msgstr ""

#~ msgid "``C:\\Program Files\\Steinberg\\VSTPlugins``"
#~ msgstr ""

#~ msgid "``C:\\Program Files\\Common Files\\VST2``"
#~ msgstr ""

#~ msgid "``C:\\Program Files\\Common Files\\Steinberg\\VST2``"
#~ msgstr ""

#~ msgid ""
#~ "Since scanning VST plugins takes a "
#~ "long time, Zrythm will remember scanned"
#~ " VST plugins and save this "
#~ "information in ``<<ZRYTHM "
#~ "PATH>>/cached_vst_descriptors.yaml``. New plugins "
#~ "will be scanned on each start-up,"
#~ " and you can delete or edit "
#~ "this file to force a re-scan "
#~ "of previously scanned plugins."
#~ msgstr ""

#~ msgid ""
#~ "Compatible ports can be connected to "
#~ "one another. This allows you to "
#~ "route anything-to-anything. For example,"
#~ " you can route an LFO's CV "
#~ "output to a filter plugin's cutoff "
#~ "parameter."
#~ msgstr ""

#~ msgid ""
#~ "The number in orange indicates how "
#~ "many ports are currently connected to"
#~ " each port."
#~ msgstr ""

#~ msgid ""
#~ "By double clicking the port, you "
#~ "can select a port to connect it"
#~ " to, or edit existing connections."
#~ msgstr ""

#~ msgid "For more information about ports, see the next section."
#~ msgstr ""

#~ msgid ""
#~ "Additionally to the above, you can "
#~ "filter plugins based on their type. "
#~ "The following types exist:"
#~ msgstr ""

#~ msgid ""
#~ "These plugins can be dragged into "
#~ "the insert slots of existing channels"
#~ " in the mixer or can be "
#~ "instantiated to create new bus tracks."
#~ msgstr ""

#~ msgid ""
#~ "When Plugin UIs are opened, a "
#~ "window such as the following will "
#~ "be displayed, if the plugin ships "
#~ "with its own UI."
#~ msgstr ""

#~ msgid ""
#~ "Some plugin UIs cannot be wrapped "
#~ "and will be opened in separate "
#~ "windows."
#~ msgstr ""

#~ msgid "Ports"
#~ msgstr ""

#~ msgid ""
#~ "Plugins expose Ports that are used "
#~ "internally to route MIDI and audio "
#~ "signals to/from and externally for "
#~ "automation."
#~ msgstr ""

#~ msgid ""
#~ "A Port can only be an Input "
#~ "Port or an Output Port and can "
#~ "have one of the following types."
#~ msgstr ""

#~ msgid "Audio"
#~ msgstr ""

#~ msgid ""
#~ "Ports of this type receive or send"
#~ " raw audio signals. Usually, Effect "
#~ "Plugins will have at least two of"
#~ " these as inputs for Left and "
#~ "Right, and at least two as "
#~ "outputs."
#~ msgstr ""

#~ msgid "Event"
#~ msgstr ""

#~ msgid ""
#~ "Event Ports are mainly used for "
#~ "routing MIDI signals. Instrument Plugins "
#~ "will have at least one Event Port."
#~ msgstr ""

#~ msgid "Control"
#~ msgstr ""

#~ msgid ""
#~ "Control Ports are Plugin parameters that"
#~ " are usually shown inside the "
#~ "Plugin's UI. These can be automated "
#~ "in automation lanes."
#~ msgstr ""

#~ msgid "CV"
#~ msgstr ""

#~ msgid ""
#~ "CV Ports are continuous signals that "
#~ "can be fed into or emitted from"
#~ " Plugins, and are mainly used by "
#~ "the Modulators. Each Modulator will have"
#~ " at least one CV output Port "
#~ "which can be routed to Plugin "
#~ "Control Ports for automation."
#~ msgstr ""

#~ msgid ""
#~ "Usually, only Ports of the same "
#~ "type can be connected, with the "
#~ "exception of CV ports. CV output "
#~ "Ports may be routed to both CV "
#~ "input Ports and Control input Ports."
#~ msgstr ""

#~ msgid "Output Ports may only be routed to Input Ports and vice versa."
#~ msgstr ""

#~ msgid ""
#~ "Tracks/channels also have their own "
#~ "ports, for example for the fader, "
#~ "pan, and enabled status (on/off)."
#~ msgstr ""

#~ msgid ""
#~ "Zrythm will scan for LV2 plugins "
#~ "in the standard paths specified `here"
#~ " <https://lv2plug.in/pages/filesystem-hierarchy-"
#~ "standard.html>`_. You can bypass this "
#~ "behavior by passing the ``LV2_PATH`` "
#~ "environment variable to specify custom "
#~ "paths. For example, ``LV2_PATH=/home/me/custom-"
#~ "lv2-dir zrythm``."
#~ msgstr ""

#~ msgid ""
#~ "You can bypass this behavior by "
#~ "passing the ``VST_PATH`` environment variable"
#~ " to specify custom paths. For "
#~ "example, ``VST_PATH=~/custom-vst-dir zrythm``."
#~ msgstr ""

#~ msgid "On MacOS, AUs will be scanned in their default locations."
#~ msgstr ""

#~ msgid "``/Library/Audio/Plug-Ins/Components``"
#~ msgstr ""

#~ msgid ""
#~ "Zrythm can import MIDI and audio "
#~ "files into the project. The files "
#~ "can be imported by dragging and "
#~ "dropping from your computer or from "
#~ "the File Browser into a track."
#~ msgstr ""

#~ msgid "Plugins are classified in the following categories."
#~ msgstr ""

#~ msgid ""
#~ "Zrythm will scan for plugins on "
#~ "startup and will remember those plugins"
#~ " until it is closed. Zrythm supports"
#~ " both LV2, VST2, VST3 and AU "
#~ "plugins. LV2 is the recommended "
#~ "standard."
#~ msgstr ""

#~ msgid ""
#~ "Plugin scanning can be disableld by "
#~ "passing NO_SCAN_PLUGINS=1 when running Zrythm."
#~ msgstr ""

#~ msgid ""
#~ "Plugin scanning can be disabled by "
#~ "passing NO_SCAN_PLUGINS=1 when running Zrythm."
#~ msgstr ""

#~ msgid ""
#~ "Zrythm will scan for LV2 plugins "
#~ "in the `standard paths specified here"
#~ " <https://lv2plug.in/pages/filesystem-hierarchy-"
#~ "standard.html>`_. You can bypass this "
#~ "behavior by passing the ``LV2_PATH`` "
#~ "environment variable to specify custom "
#~ "paths. For example, ``LV2_PATH=$HOME/custom-"
#~ "lv2-dir zrythm``."
#~ msgstr ""

#~ msgid "``$HOME/.vst``"
#~ msgstr ""

#~ msgid "``$HOME/vst``"
#~ msgstr ""

#~ msgid "``/usr/local/lib/vst``"
#~ msgstr ""

#~ msgid "``/usr/lib/vst``"
#~ msgstr ""

#~ msgid ""
#~ "You can bypass this behavior by "
#~ "passing the ``VST_PATH`` environment variable"
#~ " to specify custom paths. For "
#~ "example, ``VST_PATH=$HOME/custom-vst-dir "
#~ "zrythm``."
#~ msgstr ""

#~ msgid "``/Library/Audio/Plug-Ins/VST`` for VST2"
#~ msgstr ""

#~ msgid "``/Library/Audio/Plug-Ins/VST3`` for VST3"
#~ msgstr ""

#~ msgid "Zrythm will scan for VST2 and VST3 plugins in the following paths."
#~ msgstr ""

#~ msgid ""
#~ "You can bypass this behavior by "
#~ "passing the :envvar:`VST_PATH` environment "
#~ "variable to specify custom paths. For"
#~ " example, ``VST_PATH=$HOME/custom-vst-dir "
#~ "zrythm``."
#~ msgstr ""

#~ msgid "``lib`` will be replaced with ``lib64`` depending on your system."
#~ msgstr ""

#~ msgid ""
#~ "Filter Plugins by category based on "
#~ "the plugin metadata, such as \"Delay\","
#~ " \"Distortion\", etc."
#~ msgstr ""

#~ msgid "Allows you to filter plugins based their protocol (LV2 or VST)."
#~ msgstr ""

#~ msgid "Collections and Protocols are not operational at the moment."
#~ msgstr ""

#~ msgid "If the plugin is a modulator, you can drop it into the Modulators Tab."
#~ msgstr ""

#~ msgid ""
#~ "The Modulators tab is a work-"
#~ "in-progress. For the time being, you"
#~ " can use them as regular effects."
#~ msgstr ""

#~ msgid ""
#~ "A plugin is an external module "
#~ "that provides audio processing capabilities"
#~ " to Zrythm, such as an SFZ "
#~ "instrument or an LV2 reverb plugin. "
#~ "There are various types of plugins "
#~ "supported by Zrythm mentioned in :ref"
#~ ":`scanning-plugins`."
#~ msgstr ""

#~ msgid "In Zrythm, SFZ/SF2 are also used as plugins."
#~ msgstr ""

#~ msgid ""
#~ "These plugins output CV signals and "
#~ "can be used to modulate other "
#~ "plugin or track parameters."
#~ msgstr ""

#~ msgid ""
#~ "These plugins modify incoming MIDI "
#~ "signals and can be used in the "
#~ "MIDI signal chain of an Instrument "
#~ "or MIDI track (coming soon)."
#~ msgstr ""

#~ msgid ""
#~ "Zrythm looks inside the Plugin's "
#~ "metadata to determine what type the "
#~ "Plugin is. If that is not enough,"
#~ " Zrythm makes a decision based on "
#~ "the number of audio, MIDI, control "
#~ "and CV input and output ports a"
#~ " Plugin has."
#~ msgstr ""

#~ msgid ""
#~ "Plugins consist of controls (parameters) "
#~ "and a variety of audio, MIDI and"
#~ " CV ports. Ports are explained in "
#~ ":ref:`ports`."
#~ msgstr ""

#~ msgid ""
#~ "Zrythm first creates all plugins with"
#~ " a special `Enabled` control port "
#~ "that controls bypassing, and the rest"
#~ " of the plugin's ports are appended."
#~ msgstr ""

#~ msgid ""
#~ "All of the plugin's ports can be"
#~ " found in the plugin inspector page"
#~ " described in :ref:`plugin-inspector-page`"
#~ msgstr ""

#~ msgid ""
#~ "Most plugins are instantiated in the "
#~ "same process as Zrythm. This has "
#~ "the advantage that DSP processing is "
#~ "very fast, however, some plugin UIs "
#~ "are not compatible with Zrythm and "
#~ "need to be bridged (run as "
#~ "separate processes)."
#~ msgstr ""

#~ msgid ""
#~ "This process is transparent to the "
#~ "user and only mentioned here for "
#~ "reference."
#~ msgstr ""

#~ msgid ""
#~ "Zrythm will scan for plugins on "
#~ "startup and will remember those plugins"
#~ " until it is closed. Zrythm supports"
#~ " LV2, VST2, VST3 and AU plugins. "
#~ "LV2 is the recommended standard."
#~ msgstr ""

#~ msgid ""
#~ "SFZ and SF2 instruments are also "
#~ "supported, and they are scanned as "
#~ "instrument plugins."
#~ msgstr ""

#~ msgid ""
#~ "Plugin scanning can be disabled by "
#~ "passing ``NO_SCAN_PLUGINS=1`` when running "
#~ "Zrythm."
#~ msgstr ""

#~ msgid ""
#~ "Zrythm will scan for LV2 plugins "
#~ "in the `standard paths specified here"
#~ " <https://lv2plug.in/pages/filesystem-hierarchy-"
#~ "standard.html>`_. You can bypass this "
#~ "behavior by passing the :envvar:`LV2_PATH` "
#~ "environment variable to specify custom "
#~ "paths. For example, ``LV2_PATH=$HOME/custom-"
#~ "lv2-dir zrythm``."
#~ msgstr ""

#~ msgid ""
#~ "You can bypass this behavior by "
#~ "passing the :envvar:`VST_PATH` or "
#~ ":envvar:`VST3_PATH` environment variables to "
#~ "specify custom paths. For example, "
#~ "``VST_PATH=$HOME/custom-vst-dir zrythm``."
#~ msgstr ""

#~ msgid ""
#~ "Since scanning VST plugins takes a "
#~ "long time, Zrythm will remember scanned"
#~ " VST plugins and save this "
#~ "information in "
#~ "``$ZRYTHM_PATH/cached_vst_descriptors.yaml``."
#~ msgstr ""

#~ msgid ""
#~ "On MacOS, AUs will be scanned at"
#~ " their default location ``/Library/Audio/Plug-"
#~ "Ins/Components``."
#~ msgstr ""

#~ msgid ""
#~ "SFZ and SF2 instruments will be "
#~ "scanned in all directories and "
#~ "subdirectories specified in :ref:`vst-paths`."
#~ msgstr ""

#~ msgid ""
#~ "Additionally to the above, you can "
#~ "filter plugins based on their type. "
#~ "See :ref:`plugin-types` for more "
#~ "information about the various types of"
#~ " plugins there are."
#~ msgstr ""

#~ msgid ""
#~ "There are various types of plugins "
#~ "(see :term:`plugin`) supported by Zrythm, "
#~ "mentioned in :ref:`scanning-plugins`."
#~ msgstr ""

#~ msgid ""
#~ "When a Plugin is selected in the"
#~ " Mixer, its page will appear in "
#~ "the Inspector as follows."
#~ msgstr ""

#~ msgid ""
#~ "This page will display information about"
#~ " the Plugin and its ports and "
#~ "allow you to make changes."
#~ msgstr ""

#~ msgid ""
#~ "The values of control ports can be"
#~ " changed by clicking and dragging "
#~ "inside the bar."
#~ msgstr ""

#~ msgid "Connections"
#~ msgstr ""

#~ msgid ""
#~ "Compatible ports can be connected to "
#~ "one another. See :ref:`making-connections` "
#~ "for more details."
#~ msgstr ""

#~ msgid ""
#~ "Zrythm first creates all plugins with"
#~ " the following special control ports:"
#~ msgstr ""

#~ msgid ""
#~ "After the above ports are created, "
#~ "Zrythm appends the rest of the "
#~ "plugin's ports."
#~ msgstr ""

#~ msgid ""
#~ "All of the plugin's ports can be"
#~ " found in the plugin inspector page"
#~ " explained in :ref:`plugin-inspector-page`"
#~ msgstr ""

